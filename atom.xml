<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>leesea</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-02-15T03:02:03.559Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>leesea</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Jenkinsfile 邮箱配置</title>
    <link href="http://yoursite.com/2020/02/15/jenkins-mail/"/>
    <id>http://yoursite.com/2020/02/15/jenkins-mail/</id>
    <published>2020-02-15T02:43:09.000Z</published>
    <updated>2020-02-15T03:02:03.559Z</updated>
    
    <content type="html"><![CDATA[<p>jenkinsfile 有两种发送邮件方式，一种是用默认的 mail 插件，另一种是使用 <code>Email Extension</code>. 后者的功能稍微多一点，可以提取 git 信息作为收件人。</p><a id="more"></a><ol><li><p>安装 <code>Email Extension Plugin</code> 插件；</p></li><li><p>Jenkinsfile post 部分配置</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">post &#123;</span><br><span class="line">    failure </span><br><span class="line">        emailext(</span><br><span class="line"><span class="symbol">            subject:</span> <span class="string">"Jenkins build is $&#123;currentBuild.result&#125;: $&#123;env.JOB_NAME&#125; #$&#123;env.BUILD_NUMBER&#125;"</span>,</span><br><span class="line"><span class="symbol">            mimeType:</span> <span class="string">"text/html"</span>,</span><br><span class="line"><span class="symbol">            body:</span> <span class="string">"""&lt;p&gt;Jenkins build is $&#123;currentBuild.result&#125;: $&#123;env.JOB_NAME&#125; #$&#123;env.BUILD_NUMBER&#125;:&lt;/p&gt;</span></span><br><span class="line"><span class="string">                         &lt;p&gt;Check console output at &lt;a href="$&#123;env.BUILD_URL&#125;console"&gt;$&#123;env.JOB_NAME&#125; #$&#123;env.BUILD_NUMBER&#125;&lt;/a&gt;&lt;/p&gt;"""</span>,</span><br><span class="line"><span class="symbol">            recipientProviders:</span> [[<span class="string">$class:</span> <span class="string">'CulpritsRecipientProvider'</span>],</span><br><span class="line">                                 [<span class="string">$class:</span> <span class="string">'DevelopersRecipientProvider'</span>],</span><br><span class="line">                                 [<span class="string">$class:</span> <span class="string">'RequesterRecipientProvider'</span>]]</span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>如果使用 mail 的方式， post 部分编写如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">post &#123;</span><br><span class="line">    failure &#123;</span><br><span class="line">        mail bcc: &apos;&apos;, body: &quot;&lt;br&gt;Project: $&#123;env.JOB_NAME&#125; &lt;br&gt;Build Number: $&#123;env.BUILD_NUMBER&#125; &lt;br&gt; URL de build: $&#123;env.BUILD_URL&#125;&quot;, cc: &apos;&apos;, charset: &apos;UTF-8&apos;, from: &apos;&apos;, mimeType: &apos;text/html&apos;, replyTo: &apos;&apos;, subject: &quot;ERROR CI: Project name -&gt; $&#123;env.JOB_NAME&#125;&quot;, to: &quot;admin@gmail.com&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>总结下可以使用的变量</p><ul><li><p><code>${env.JOB_NAME}</code>:  job 的名字</p></li><li><p><code>${env.BUILD_NUMBER}</code>: job 构建号</p></li><li><p><code>${env.BUILD_URL}</code>: job 构建 url</p></li><li><p><code>${env.BUILD_URL}console</code>: job 构建控制台 url, 这里可以自己组织出很多种</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;jenkinsfile 有两种发送邮件方式，一种是用默认的 mail 插件，另一种是使用 &lt;code&gt;Email Extension&lt;/code&gt;. 后者的功能稍微多一点，可以提取 git 信息作为收件人。&lt;/p&gt;
    
    </summary>
    
      <category term="CI" scheme="http://yoursite.com/categories/CI/"/>
    
    
      <category term="jenkins" scheme="http://yoursite.com/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>Vue 常见问题汇总</title>
    <link href="http://yoursite.com/2020/02/10/vue-faq/"/>
    <id>http://yoursite.com/2020/02/10/vue-faq/</id>
    <published>2020-02-10T06:34:00.000Z</published>
    <updated>2020-02-10T06:36:16.916Z</updated>
    
    <content type="html"><![CDATA[<p>先记录下自己写前端遇到过的问题。</p><a id="more"></a><ol><li>父页面设置子组件的显示和隐藏</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;先记录下自己写前端遇到过的问题。&lt;/p&gt;
    
    </summary>
    
      <category term="js" scheme="http://yoursite.com/categories/js/"/>
    
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>go channel</title>
    <link href="http://yoursite.com/2020/01/31/go-channel/"/>
    <id>http://yoursite.com/2020/01/31/go-channel/</id>
    <published>2020-01-31T05:06:27.000Z</published>
    <updated>2020-01-31T05:41:17.533Z</updated>
    
    <content type="html"><![CDATA[<p>go 社区有一句口号：”不要通过共享内存来通信，而应该通过通信来共享内存”, channel 用于 goroutine 之间传递消息。如果是多进程之间的通信，还是推荐使用 socket 或者 http.</p><a id="more"></a><h2 id="channel-操作"><a href="#channel-操作" class="headerlink" title="channel 操作"></a>channel 操作</h2><h3 id="声明和定义"><a href="#声明和定义" class="headerlink" title="声明和定义"></a>声明和定义</h3><p>channel 只能发送指定类型的数据，因此channel的声明和定义必须指定类型；</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明一个 int类型的 channel</span></span><br><span class="line"><span class="keyword">var</span> ch1 <span class="keyword">chan</span> <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个不带缓存的 channel</span></span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个带缓存的 channel</span></span><br><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取 channel 容量</span></span><br><span class="line"><span class="built_in">cap</span>(ch)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取 channel 现有长度、</span></span><br><span class="line"><span class="built_in">len</span>(ch)</span><br></pre></td></tr></table></figure><h3 id="channel-的缓存"><a href="#channel-的缓存" class="headerlink" title="channel 的缓存"></a>channel 的缓存</h3><p>从无缓存的 channel 中读取消息，会发生阻塞，直到有 goroutine 向该channel 发送消息；同理向无缓存的channle发送消息也会阻塞，直到有 goroutine 读取该channel中的消息。</p><blockquote><p>通过无缓存的channel进行通信时，接受者收到数据 happens before 发送者 goroutine 唤醒</p></blockquote><p>有缓存的 channel 当缓存未满时，发送消息不会阻塞，当缓存慢时，发送消息会阻塞。当缓存不为空时，读取消息不会阻塞，缓存为空时，读取消息会阻塞。</p><blockquote><p>许式伟《go语言编程》中关于 channel 的例子有点小问题，如果是等待 gorotine 完成，建议把写 channel 的操作放在函数的最后，避免 channel 刚写完，就被读取，而其它部分代码还没执行就退出了。</p></blockquote><h3 id="channel-数据发送和读取"><a href="#channel-数据发送和读取" class="headerlink" title="channel 数据发送和读取"></a>channel 数据发送和读取</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 写入数据</span></span><br><span class="line">ch &lt;- <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取数据</span></span><br><span class="line">value := &lt;- ch</span><br></pre></td></tr></table></figure><p>还可以使用 range 来读取 channel</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ch := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x := <span class="keyword">range</span> ch &#123;</span><br><span class="line">  fmt.Println(x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>range 会一直从 channel 中取值，直到有 goroutine 对该 channel 调用 close 操作。上面的代码等价于:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">  x, ok := &lt;- ch</span><br><span class="line">  <span class="keyword">if</span> !ok &#123;</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">  &#125;</span><br><span class="line">  fmt.Println(x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="close"><a href="#close" class="headerlink" title="close"></a>close</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;go 社区有一句口号：”不要通过共享内存来通信，而应该通过通信来共享内存”, channel 用于 goroutine 之间传递消息。如果是多进程之间的通信，还是推荐使用 socket 或者 http.&lt;/p&gt;
    
    </summary>
    
      <category term="go" scheme="http://yoursite.com/categories/go/"/>
    
    
      <category term="go" scheme="http://yoursite.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>go 包管理</title>
    <link href="http://yoursite.com/2019/12/29/go-pkg/"/>
    <id>http://yoursite.com/2019/12/29/go-pkg/</id>
    <published>2019-12-29T04:14:36.000Z</published>
    <updated>2020-01-31T05:12:55.829Z</updated>
    
    <content type="html"><![CDATA[<p>import 别名</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> log <span class="string">"github.com/sirupsen/logrus"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;import 别名&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;
      
    
    </summary>
    
      <category term="go" scheme="http://yoursite.com/categories/go/"/>
    
    
      <category term="go" scheme="http://yoursite.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>etcd 速查手册</title>
    <link href="http://yoursite.com/2019/12/20/etcd/"/>
    <id>http://yoursite.com/2019/12/20/etcd/</id>
    <published>2019-12-20T02:49:52.000Z</published>
    <updated>2019-12-20T04:11:46.380Z</updated>
    
    <content type="html"><![CDATA[<p>Etcd 是一个 key-value 数据库，主要用于：</p><ul><li>服务发现</li><li></li></ul><h2 id="查看版本信息"><a href="#查看版本信息" class="headerlink" title="查看版本信息"></a>查看版本信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ etcdctl version</span><br><span class="line">etcdctl version: 3.3.13</span><br><span class="line">API version: 3.3</span><br></pre></td></tr></table></figure><h2 id="key-操作"><a href="#key-操作" class="headerlink" title="key 操作"></a>key 操作</h2><h3 id="添加-key"><a href="#添加-key" class="headerlink" title="添加 key"></a>添加 key</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加 key</span></span><br><span class="line">$ etcdctl put foo bar</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><h3 id="获取-key"><a href="#获取-key" class="headerlink" title="获取 key"></a>获取 key</h3><p>etcdctl 读取 key 值的时候会把key 也输出，如果有多个 key，会连着输出，中间没有空行，有点蛋疼</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取 key</span></span><br><span class="line">$ etcdctl get foo</span><br><span class="line">foo</span><br><span class="line">bar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取 key --prefix</span></span><br><span class="line">$ etcdctl get --prefix f</span><br><span class="line">foo</span><br><span class="line">bar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只显示 key</span></span><br><span class="line">$ etcdctl get foo --keys-only</span><br><span class="line">foo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只显示 value</span></span><br><span class="line">$ etcdctl get foo --<span class="built_in">print</span>-value-only</span><br><span class="line">bar</span><br></pre></td></tr></table></figure><h3 id="删除key"><a href="#删除key" class="headerlink" title="删除key"></a>删除key</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ etcdctl del cc</span><br><span class="line">1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Etcd 是一个 key-value 数据库，主要用于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务发现&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;查看版本信息&quot;&gt;&lt;a href=&quot;#查看版本信息&quot; class=&quot;headerlink&quot; title=&quot;查看版本信息&quot;&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>k8s-cert</title>
    <link href="http://yoursite.com/2019/12/02/k8s-cert/"/>
    <id>http://yoursite.com/2019/12/02/k8s-cert/</id>
    <published>2019-12-02T08:38:36.000Z</published>
    <updated>2019-12-02T08:43:41.291Z</updated>
    
    <content type="html"><![CDATA[<p>使用kubeadm 搭建的 k8s 环境，证书模式有效期是一年，到一年</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用kubeadm 搭建的 k8s 环境，证书模式有效期是一年，到一年&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="k8s 证书问题" scheme="http://yoursite.com/tags/k8s-%E8%AF%81%E4%B9%A6%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>redis</title>
    <link href="http://yoursite.com/2019/11/22/redis/"/>
    <id>http://yoursite.com/2019/11/22/redis/</id>
    <published>2019-11-22T08:47:59.000Z</published>
    <updated>2019-11-22T08:50:15.673Z</updated>
    
    <content type="html"><![CDATA[<h2 id="redis-主从复制"><a href="#redis-主从复制" class="headerlink" title="redis 主从复制"></a>redis 主从复制</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果主服务设置了密码</span></span><br><span class="line">config <span class="built_in">set</span> masterauth &lt;<span class="built_in">pwd</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置主服务器</span></span><br><span class="line">SLAVEOF 192.168.1.100 6379</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消同步</span></span><br><span class="line">SLAVEOF NO ONE</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;redis-主从复制&quot;&gt;&lt;a href=&quot;#redis-主从复制&quot; class=&quot;headerlink&quot; title=&quot;redis 主从复制&quot;&gt;&lt;/a&gt;redis 主从复制&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mysql 分区, 分库，分表</title>
    <link href="http://yoursite.com/2019/11/06/mysql-part/"/>
    <id>http://yoursite.com/2019/11/06/mysql-part/</id>
    <published>2019-11-06T14:44:00.000Z</published>
    <updated>2019-11-07T01:47:23.567Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><p><strong>什么是分区</strong></p><p>将一个表拆解成多个区块</p><p><strong>分区的好处</strong></p><ol><li>进行逻辑数据分割，分割数据能有多个不同的物理文件路径；</li><li>可以存储更多的数据，突破系统单个文件最大限制；</li><li>提升性能，提高每个分区的读写速度，提高分区范围内的查询速度；</li><li>可以通过删除分区来快速删除数据，例如分区是按年份划分；</li><li>通过跨磁盘来分散数据，从而提高磁盘I/O性能；</li><li>涉及到SUM， COUNT等聚合函数，可以并行计算；</li><li>可以备份恢复独立分区，对大数据量有好处；</li></ol><p><strong>分区能支持的引擎</strong></p><p>同一个表中的所有分区必须是同一个引擎；</p><h3 id="查看是否支持分区"><a href="#查看是否支持分区" class="headerlink" title="查看是否支持分区"></a>查看是否支持分区</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; show plugins;</span><br><span class="line"></span><br><span class="line">+-------------------------------+----------+--------------------+---------+---------+</span><br><span class="line">| partition                     | ACTIVE   | STORAGE ENGINE     | NULL    | GPL     |</span><br><span class="line">+-------------------------------+----------+--------------------+---------+---------+</span><br></pre></td></tr></table></figure><p>分区类型</p><ol><li>RANGE 分区；</li><li>LIST 分区；</li><li>HASH分区；</li><li>KEY分区，类似HASH分区，由MySQL服务器提供其自身的哈希函数；</li></ol><h2 id="分表"><a href="#分表" class="headerlink" title="分表"></a>分表</h2><p><strong>好处</strong></p><h2 id="分库"><a href="#分库" class="headerlink" title="分库"></a>分库</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;分区&quot;&gt;&lt;a href=&quot;#分区&quot; class=&quot;headerlink&quot; title=&quot;分区&quot;&gt;&lt;/a&gt;分区&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;什么是分区&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将一个表拆解成多个区块&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分区的好处&lt;/strong
      
    
    </summary>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch dsl使用</title>
    <link href="http://yoursite.com/2019/10/31/es-dsl/"/>
    <id>http://yoursite.com/2019/10/31/es-dsl/</id>
    <published>2019-10-31T03:04:15.000Z</published>
    <updated>2019-10-31T03:18:32.933Z</updated>
    
    <content type="html"><![CDATA[<p>elasticsearch_dsl 库可以方便的生成一些复杂的 dsl 语句，而不用自己去写 json.</p><a id="more"></a><h3 id="指定-source"><a href="#指定-source" class="headerlink" title="指定 _source"></a>指定 <code>_source</code></h3><p>指定确定的字段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> elasticsearch_dsl <span class="keyword">import</span> Search</span><br><span class="line"></span><br><span class="line">s = Source()</span><br><span class="line">s = s.source([<span class="string">'attacker_ip'</span>, <span class="string">'attacker_id'</span>])</span><br><span class="line">print(s.to_dict())</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#123;'query': &#123;'match_all': &#123;&#125;&#125;, '_source': ['attacker_ip', 'attacker_id']</span></span><br></pre></td></tr></table></figure><p>使用 <code>include</code>和 <code>exclude</code> ，需要注意的是两种方式不能同时使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> elasticsearch_dsl <span class="keyword">import</span> Search</span><br><span class="line"></span><br><span class="line">s = Source()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要注意的是 source 并不是在原有对象上修改，需要重新赋值</span></span><br><span class="line">s = s.source(include=[<span class="string">'attacker_id'</span>], exclude=[<span class="string">"time*"</span>])</span><br><span class="line">print(s.to_dict())</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#123;'query': &#123;'match_all': &#123;&#125;&#125;, '_source': &#123;'include': ['attacker_id'], 'exclude': ['time*']&#125;&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;elasticsearch_dsl 库可以方便的生成一些复杂的 dsl 语句，而不用自己去写 json.&lt;/p&gt;
    
    </summary>
    
    
      <category term="elasticsearch" scheme="http://yoursite.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>rabbitmq 命令速查</title>
    <link href="http://yoursite.com/2019/10/24/rabbitmqctl/"/>
    <id>http://yoursite.com/2019/10/24/rabbitmqctl/</id>
    <published>2019-10-24T08:29:24.000Z</published>
    <updated>2019-10-24T08:30:10.886Z</updated>
    
    <content type="html"><![CDATA[<h3 id="清空队列"><a href="#清空队列" class="headerlink" title="清空队列"></a>清空队列</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl purge_queue queue_name</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;清空队列&quot;&gt;&lt;a href=&quot;#清空队列&quot; class=&quot;headerlink&quot; title=&quot;清空队列&quot;&gt;&lt;/a&gt;清空队列&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
    
      <category term="mq" scheme="http://yoursite.com/tags/mq/"/>
    
  </entry>
  
  <entry>
    <title>selenium 集群搭建</title>
    <link href="http://yoursite.com/2019/09/20/selenium/"/>
    <id>http://yoursite.com/2019/09/20/selenium/</id>
    <published>2019-09-20T03:36:57.000Z</published>
    <updated>2019-09-20T06:35:29.775Z</updated>
    
    <content type="html"><![CDATA[<p>本文以 centos 为例，介绍下如何搭建 selenium 集群。</p><a id="more"></a><p>##selenium 安装</p><h3 id="chrome-安装"><a href="#chrome-安装" class="headerlink" title="chrome 安装"></a>chrome 安装</h3><h3 id="chrome-driver-安装"><a href="#chrome-driver-安装" class="headerlink" title="chrome driver 安装"></a>chrome driver 安装</h3><p>从 <a href="http://chromedriver.storage.googleapis.com/index.html" target="_blank" rel="noopener">http://chromedriver.storage.googleapis.com/index.html</a> 下载之后解压到到 <code>/usr/bin/</code> 目录即可。macos可以使用 <code>brew</code>安装:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install chromedriver</span><br></pre></td></tr></table></figure><h2 id="设置-headless"><a href="#设置-headless" class="headerlink" title="设置 headless"></a>设置 headless</h2><p>所谓 <code>headless</code>就是不用 <code>GUI</code>, 设置方式如下 ：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"></span><br><span class="line">options = Options()</span><br><span class="line">options.add_argument(<span class="string">'--headless'</span>)</span><br><span class="line">options.add_argument(<span class="string">'--disable-gpu'</span>)  <span class="comment"># Last I checked this was necessary.</span></span><br><span class="line">options.add_argument(<span class="string">'--disable-dev-shm-usage'</span>)</span><br><span class="line">options.add_argument(<span class="string">'--no-sandbox'</span>)</span><br><span class="line"></span><br><span class="line">driver = webdriver.Chrome(options=options)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文以 centos 为例，介绍下如何搭建 selenium 集群。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python-future</title>
    <link href="http://yoursite.com/2019/08/22/python-future/"/>
    <id>http://yoursite.com/2019/08/22/python-future/</id>
    <published>2019-08-22T01:50:52.000Z</published>
    <updated>2019-09-18T09:42:34.160Z</updated>
    
    <content type="html"><![CDATA[<p>future 是 python 的的并发库，py2 需要单独安装，py3已经集成到标准库中了。future用的比较多的是线程池和进程池。</p><a id="more"></a><h2 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> as_completed</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(i)</span>:</span></span><br><span class="line">  <span class="comment"># do something</span></span><br><span class="line">  time.sleep(random.randint(<span class="number">1</span>, <span class="number">5</span>))</span><br><span class="line"><span class="keyword">return</span> i</span><br><span class="line"></span><br><span class="line"><span class="comment"># max_workers 指定线程池大小，如果不指定默认是 cpu *5</span></span><br><span class="line">p = ThreadPoolExecutor(max_workers=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交任务</span></span><br><span class="line">tasks = [p.submit(foo, i) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取返回结果, 这里的返回并不是按照提交顺序来的，而是谁先完成，谁先返回</span></span><br><span class="line"><span class="keyword">for</span> future <span class="keyword">in</span> as_completed(tasks):</span><br><span class="line">  print(future.result())</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment"># 如果希望有序返回，使用 map</span></span><br><span class="line"><span class="comment"># 这里 result 是生成器，可以使用 list(result) 转换为 list 类型</span></span><br><span class="line">result = p.map(foo, range(<span class="number">10</span>))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;future 是 python 的的并发库，py2 需要单独安装，py3已经集成到标准库中了。future用的比较多的是线程池和进程池。&lt;/p&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
  </entry>
  
  <entry>
    <title>单机性能分析</title>
    <link href="http://yoursite.com/2019/08/22/io/"/>
    <id>http://yoursite.com/2019/08/22/io/</id>
    <published>2019-08-22T01:34:04.000Z</published>
    <updated>2019-08-22T01:43:16.515Z</updated>
    
    <content type="html"><![CDATA[<p>给你一台服务器或者虚拟机，怎么充分发挥性能呢？</p><a id="more"></a><h1 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h1><p>如果是计算密集形的任务，主要瓶颈可能在CPU, 可以通过 top 命令查看 cpu的使用率。</p><h1 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h1><p>内存不光涉及使用率，还有换页等。</p><h1 id="硬盘I-O"><a href="#硬盘I-O" class="headerlink" title="硬盘I/O"></a>硬盘I/O</h1><h2 id="iostat"><a href="#iostat" class="headerlink" title="iostat"></a>iostat</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum install sysstat -y</span><br><span class="line"></span><br><span class="line">iostat</span><br><span class="line">Linux 3.10.0-514.26.2.el7.v7.4.x86_64 (centos) 08/22/2019 _x86_64_(4 CPU)</span><br><span class="line"></span><br><span class="line">avg-cpu:  %user   %nice %system %iowait  %steal   %idle</span><br><span class="line">           2.61    0.00    0.45    0.00    0.00   96.94</span><br><span class="line"></span><br><span class="line">Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn</span><br><span class="line">sda               0.52         0.12      1727.75     515932 7572051863</span><br></pre></td></tr></table></figure><h1 id="网络I-O"><a href="#网络I-O" class="headerlink" title="网络I/O"></a>网络I/O</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;给你一台服务器或者虚拟机，怎么充分发挥性能呢？&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>go 操作 ElasticSearch</title>
    <link href="http://yoursite.com/2019/08/21/go-es/"/>
    <id>http://yoursite.com/2019/08/21/go-es/</id>
    <published>2019-08-21T03:22:01.000Z</published>
    <updated>2019-08-21T03:28:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>go 操作ES并不像 python 那么直观，需要使用很多的 struct 和 函数，感觉没有 python 的 dict 好用。本文以<code>v5</code>版本为例说明。</p><a id="more"></a><h2 id="建立连接"><a href="#建立连接" class="headerlink" title="建立连接"></a>建立连接</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">"gopkg.in/olivere/elastic.v5"</span></span><br><span class="line"></span><br><span class="line">client, err := elastic.NewClient(elastic.SetURL(<span class="string">"http://192.168.1.100:9296"</span>))</span><br></pre></td></tr></table></figure><h2 id="查看dsl-语句"><a href="#查看dsl-语句" class="headerlink" title="查看dsl 语句"></a>查看dsl 语句</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"encoding/json"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"gopkg.in/olivere/elastic.v5"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">query := elastic.NewBoolQuery()</span><br><span class="line">query = query.Must(elastic.NewTermQuery(<span class="string">"user"</span>, <span class="string">"olivere"</span>))</span><br><span class="line">query = query.Filter(elastic.NewTermQuery(<span class="string">"account"</span>, <span class="number">1</span>))</span><br><span class="line">src, err := query.Source()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">data, err := json.MarshalIndent(src, <span class="string">""</span>, <span class="string">"  "</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"> <span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(data))</span><br><span class="line"></span><br><span class="line"><span class="comment">// Output:</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//   "bool": &#123;</span></span><br><span class="line"><span class="comment">//     "filter": &#123;</span></span><br><span class="line"><span class="comment">//       "term": &#123;</span></span><br><span class="line"><span class="comment">//         "account": 1</span></span><br><span class="line"><span class="comment">//       &#125;</span></span><br><span class="line"><span class="comment">//     &#125;,</span></span><br><span class="line"><span class="comment">//     "must": &#123;</span></span><br><span class="line"><span class="comment">//       "term": &#123;</span></span><br><span class="line"><span class="comment">//         "user": "olivere"</span></span><br><span class="line"><span class="comment">//       &#125;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;go 操作ES并不像 python 那么直观，需要使用很多的 struct 和 函数，感觉没有 python 的 dict 好用。本文以&lt;code&gt;v5&lt;/code&gt;版本为例说明。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>kafka 常用命令</title>
    <link href="http://yoursite.com/2019/08/19/kafka/"/>
    <id>http://yoursite.com/2019/08/19/kafka/</id>
    <published>2019-08-19T10:42:48.000Z</published>
    <updated>2020-02-01T03:41:45.730Z</updated>
    
    <content type="html"><![CDATA[<p>kafka 常用命令。</p><a id="more"></a><h2 id="topic-相关"><a href="#topic-相关" class="headerlink" title="topic 相关"></a>topic 相关</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建 topic</span></span><br><span class="line">./kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#列出所有 topic</span></span><br><span class="line">./kafka-topics.sh --zookeeper zookeeper:2181/kafka --list</span><br></pre></td></tr></table></figure><p>查看 topic</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./kafka-topics.sh --zookeeper zookeeper:2181 --describe --topic test</span></span><br><span class="line"></span><br><span class="line">Topic:<span class="built_in">test</span>PartitionCount:1ReplicationFactor:1Configs:</span><br><span class="line">Topic: <span class="built_in">test</span>Partition: 0Leader: 0Replicas: 0Isr: 0</span><br></pre></td></tr></table></figure><p>增加分区数量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./kafka-topics.sh --zookeeper zookeeper:2181 --alter --topic test --partitions 4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ./kafka-topics.sh --zookeeper zookeeper:2181 --describe --topic test</span></span><br><span class="line">Topic:<span class="built_in">test</span>PartitionCount:4ReplicationFactor:1Configs:</span><br><span class="line">Topic: <span class="built_in">test</span>Partition: 0Leader: 0Replicas: 0Isr: 0</span><br><span class="line">Topic: <span class="built_in">test</span>Partition: 1Leader: 0Replicas: 0Isr: 0</span><br><span class="line">Topic: <span class="built_in">test</span>Partition: 2Leader: 0Replicas: 0Isr: 0</span><br><span class="line">Topic: <span class="built_in">test</span>Partition: 3Leader: 0Replicas: 0Isr: 0</span><br></pre></td></tr></table></figure><h2 id="消息相关"><a href="#消息相关" class="headerlink" title="消息相关"></a>消息相关</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 发送消息</span></span><br><span class="line">./kafka-console-producer.sh --broker-list localhost:9092 --topic <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 消费消息</span></span><br><span class="line">./kafka-console-consumer.sh  --bootstrap-server localhost:9092 --topic <span class="built_in">test</span> --from-beginning</span><br><span class="line"></span><br><span class="line"><span class="comment"># 消费一条消息</span></span><br><span class="line">./kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic t_my_topic --max-messages 1</span><br></pre></td></tr></table></figure><h2 id="group-相关"><a href="#group-相关" class="headerlink" title="group 相关"></a>group 相关</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#列出所有 consumer group</span></span><br><span class="line">./kafka-consumer-groups.sh --bootstrap-server localhost:9092 --list</span><br><span class="line"></span><br><span class="line"><span class="comment">#某个 consumer group 信息</span></span><br><span class="line">./kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group group_id_qa</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将某个 group 的 topic 重置到 earliest</span></span><br><span class="line">./kafka-consumer-groups.sh --bootstrap-server localhost:9092 --group example --topic aether_hosts --execute --reset-offsets --to-earliest</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;kafka 常用命令。&lt;/p&gt;
    
    </summary>
    
    
      <category term="kafka" scheme="http://yoursite.com/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>alpine</title>
    <link href="http://yoursite.com/2019/07/25/alpine/"/>
    <id>http://yoursite.com/2019/07/25/alpine/</id>
    <published>2019-07-25T03:41:22.000Z</published>
    <updated>2019-08-06T11:24:22.603Z</updated>
    
    <content type="html"><![CDATA[<p>alpine 是一个很小的linux 镜像，只有十几M大小，很适合部分服务。不过 alpine 的 c 库不是 glibc，所以依赖 glibc 时会有一些问题。</p><a id="more"></a><h2 id="定制时区"><a href="#定制时区" class="headerlink" title="定制时区"></a>定制时区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">apk add tzdata --no-cache</span><br><span class="line">ls /usr/share/zoneinfo</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Europe/Brussels"</span> &gt;  /etc/timezone</span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者通过环境变量方式设置</span></span><br><span class="line">ENV TZ Asia/Shanghai</span><br></pre></td></tr></table></figure><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><p>alpine 的 gcc 不是标准的 glibc, 使用 mysql 时有点问题，需要用下面的sed 命令修改下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apk add --no-cache mariadb-dev gcc musl-dev</span><br><span class="line">sed <span class="string">'/st_mysql_options options;/a unsigned int reconnect;'</span> /usr/include/mysql/mysql.h -i.bkp</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;alpine 是一个很小的linux 镜像，只有十几M大小，很适合部分服务。不过 alpine 的 c 库不是 glibc，所以依赖 glibc 时会有一些问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>mysql 常用命令</title>
    <link href="http://yoursite.com/2019/07/25/mysql/"/>
    <id>http://yoursite.com/2019/07/25/mysql/</id>
    <published>2019-07-25T02:33:59.000Z</published>
    <updated>2019-11-29T10:02:06.567Z</updated>
    
    <content type="html"><![CDATA[<p>记录下mysql 常用命令，方便查阅。</p><a id="more"></a><h2 id="host-授权"><a href="#host-授权" class="headerlink" title="host 授权"></a>host 授权</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 通配符设置网段</span></span><br><span class="line"><span class="keyword">grant</span> all <span class="keyword">privileges</span> <span class="keyword">on</span> &lt;db_name&gt;.* <span class="keyword">to</span> root@<span class="string">'10.249.149.%'</span> <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">'&lt;pwd&gt;'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure><p>grant all privileges on <em>.</em> to root@’10.91.30.150’ identified by ‘ZAQ!2wsx’;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录下mysql 常用命令，方便查阅。&lt;/p&gt;
    
    </summary>
    
      <category term="database" scheme="http://yoursite.com/categories/database/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>vagrant 使用</title>
    <link href="http://yoursite.com/2019/07/24/vagrant/"/>
    <id>http://yoursite.com/2019/07/24/vagrant/</id>
    <published>2019-07-24T06:33:09.000Z</published>
    <updated>2019-07-24T09:45:36.595Z</updated>
    
    <content type="html"><![CDATA[<p>Vagrant 是一款虚拟机管理工具，支持hyper, libvirt, virtual box, VMware_desktop, 可以和IDE 集成。使用vagrant的好处是可以在windows或者macos下编写代码，在linux下运行。</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://www.vagrantup.com/downloads.html" target="_blank" rel="noopener">https://www.vagrantup.com/downloads.html</a> 下载对应安装包安装即可。</p><h2 id="安装虚拟机"><a href="#安装虚拟机" class="headerlink" title="安装虚拟机"></a>安装虚拟机</h2><p>Vagrant 可以使用命令安装虚拟机，不过网络容易断，建议先下载镜像，再离线安装。</p><h3 id="在线安装"><a href="#在线安装" class="headerlink" title="在线安装"></a>在线安装</h3><p>虚拟机类型根据自己需求选择，这里选择的是 virtualbox</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vagrant box add centos/7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">This box can work with multiple providers! The providers that it</span><br><span class="line">can work with are listed below. Please review the list and choose</span><br><span class="line">the provider you will be working with.</span><br><span class="line"></span><br><span class="line">1) hyperv</span><br><span class="line">2) libvirt</span><br><span class="line">3) virtualbox</span><br><span class="line">4) vmware_desktop</span><br><span class="line"></span><br><span class="line">Enter your choice: 3</span><br></pre></td></tr></table></figure><h3 id="离线安装"><a href="#离线安装" class="headerlink" title="离线安装"></a>离线安装</h3><p>vagrant 网站提供了一些镜像下载，地址如下： <a href="https://app.vagrantup.com/boxes/search" target="_blank" rel="noopener">https://app.vagrantup.com/boxes/search</a>, 这里以centos7为例：</p><ol><li>下载镜像 centos7 的镜像；</li><li><code>vagrant box add —name &#39;centos/7&#39; [box_path]</code></li></ol><h2 id="虚拟机操作"><a href="#虚拟机操作" class="headerlink" title="虚拟机操作"></a>虚拟机操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成虚拟机配置文件</span></span><br><span class="line">vagrant init centos/7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动虚拟机</span></span><br><span class="line">vagrant up</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录虚拟机(默认账号密码都是vagrant, 可以 su 到 root)</span></span><br><span class="line">vagrant ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭虚拟机</span></span><br><span class="line">vagrant halt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 销毁虚拟机</span></span><br><span class="line">vagrant destroy</span><br></pre></td></tr></table></figure><h2 id="pycharm-集成"><a href="#pycharm-集成" class="headerlink" title="pycharm 集成"></a>pycharm 集成</h2><p>Vagrant 只支持pycharm 专业版，不需要单独安装插件。</p><h2 id="vagrant-配置说明"><a href="#vagrant-配置说明" class="headerlink" title="vagrant 配置说明"></a>vagrant 配置说明</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置同步目录</span></span><br><span class="line">config.vm.synced_folder <span class="string">"./"</span>, <span class="string">"/vagrant_data/my_project"</span>, create: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置网络</span></span><br><span class="line">config.vm.network <span class="string">"private_network"</span>, ip: <span class="string">"192.168.33.10"</span></span><br></pre></td></tr></table></figure><h2 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h2><ol><li><p>vboxsf  mount 问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vagrant plugin install vagrant-vbguest</span><br><span class="line">vagrant destroy &amp;&amp; vagrant up</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Vagrant 是一款虚拟机管理工具，支持hyper, libvirt, virtual box, VMware_desktop, 可以和IDE 集成。使用vagrant的好处是可以在windows或者macos下编写代码，在linux下运行。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python 时间日期</title>
    <link href="http://yoursite.com/2019/07/23/python-date/"/>
    <id>http://yoursite.com/2019/07/23/python-date/</id>
    <published>2019-07-23T02:01:52.000Z</published>
    <updated>2019-12-23T03:51:16.432Z</updated>
    
    <content type="html"><![CDATA[<p>时间和日期常常会在编程中使用。</p><a id="more"></a><h2 id="字符串和日期转换"><a href="#字符串和日期转换" class="headerlink" title="字符串和日期转换"></a>字符串和日期转换</h2><ul><li><code>strptime</code> = “string parse time”</li><li><code>strftime</code> = “string format time”</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># str 转 datetime</span></span><br><span class="line">datetime_obj = datetime.strptime(<span class="string">'Jun 1 2005  1:33PM'</span>, <span class="string">'%b %d %Y %I:%M%p'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># datetime 转 str</span></span><br><span class="line">date_str = datetime.strftime(datetime_obj, <span class="string">'%b %d %Y %I:%M%p'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># date 转 str</span></span><br><span class="line">today = datetime.date.today()</span><br><span class="line">today_str = today.strftime(<span class="string">'%Y-%m-%d'</span>)</span><br></pre></td></tr></table></figure><h2 id="datetime-转-date"><a href="#datetime-转-date" class="headerlink" title="datetime 转 date"></a>datetime 转 date</h2><p>使用 <code>date</code> 函数转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">date_str = <span class="string">'2019.01.22'</span></span><br><span class="line">index_date = datetime.strptime(date_str, <span class="string">"%Y.%m.%d"</span>).date()</span><br></pre></td></tr></table></figure><h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取当前日期</span></span><br><span class="line">today = datetime.date.today()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 昨天</span></span><br><span class="line">yesterday = today + datetime.timedelta(<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 明天</span></span><br><span class="line">tomorrow = today + datetime.timedelta(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去年今天</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> dateutil.relativedelta <span class="keyword">import</span> relativedelta</span><br><span class="line">one_yrs_ago = datetime.now() - relativedelta(years=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="日期比较"><a href="#日期比较" class="headerlink" title="日期比较"></a>日期比较</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># date 类型比较</span></span><br><span class="line">days = (today - tomorrow).days</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># datetime 类型比较</span></span><br><span class="line">datetime1 &gt; datetime2</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;时间和日期常常会在编程中使用。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch 笔记</title>
    <link href="http://yoursite.com/2019/07/16/elasticsearch/"/>
    <id>http://yoursite.com/2019/07/16/elasticsearch/</id>
    <published>2019-07-16T02:17:28.000Z</published>
    <updated>2019-11-28T03:48:54.408Z</updated>
    
    <content type="html"><![CDATA[<p>记录下ES的常用操作，方便查看。</p><a id="more"></a><h2 id="painless"><a href="#painless" class="headerlink" title="painless"></a>painless</h2><p>ES 使用的是 <code>painless</code> 语言。</p><h2 id="更新数组"><a href="#更新数组" class="headerlink" title="更新数组"></a>更新数组</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="索引操作"><a href="#索引操作" class="headerlink" title="索引操作"></a>索引操作</h2><p><strong>删除单个索引</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE /index_name</span><br></pre></td></tr></table></figure><p><strong>删除所有索引</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 两张选其一即可</span><br><span class="line">DELETE /_all</span><br><span class="line">DELETE /*</span><br></pre></td></tr></table></figure><p><strong>索引复制</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">POST /_reindex?wait_for_completion=false</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;source&quot;: &#123;</span><br><span class="line">    &quot;index&quot;: &quot;source_index&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;dest&quot;: &#123;</span><br><span class="line">    &quot;index&quot;: &quot;target_index&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文档操作"><a href="#文档操作" class="headerlink" title="文档操作"></a>文档操作</h2><p><strong>删除单个文档</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE /index/_doc/id</span><br></pre></td></tr></table></figure><p><strong>文档重建</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PUT /index/type/id</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;ip&quot;: &quot;10.10.10.10&quot;,</span><br><span class="line">    &quot;name&quot;: &quot;lina&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="显示版本信息"><a href="#显示版本信息" class="headerlink" title="显示版本信息"></a>显示版本信息</h2><p>ES文档都一个_version的计数器，用来记录文档的变更情况。需要注意的是ES并没有保存历史文档，_version只是一个计数器。需要查看version, 增加查询参数: <code>version=true</code></p><h2 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h2><p>根据 <code>_id</code>查询</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"bool"</span>: &#123;</span><br><span class="line">            <span class="attr">"must"</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">"terms"</span>: &#123;</span><br><span class="line">                        <span class="attr">"_id"</span>: [</span><br><span class="line">                            <span class="string">"12345678"</span>,</span><br><span class="line">                            <span class="string">"12345679"</span></span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>指定时间范围，这里的 <code>date</code> 是文档中的字段</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"range"</span> : &#123;</span><br><span class="line">            <span class="attr">"date"</span> : &#123;</span><br><span class="line">                <span class="attr">"gte"</span> : <span class="string">"2019-05-01T00:00:00"</span>,</span><br><span class="line">                <span class="attr">"lte"</span> : <span class="string">"2019-05-01T23:59:59"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数组匹配</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// 这里 hosts 是一个数组类型</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"bool"</span>: &#123;</span><br><span class="line">            <span class="attr">"should"</span>: &#123;</span><br><span class="line">                <span class="attr">"term"</span>: &#123;</span><br><span class="line">                    <span class="attr">"hosts"</span>: &#123;</span><br><span class="line">                      <span class="attr">"value"</span>: <span class="string">"www.test.gov.cn"</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="bool-查询"><a href="#bool-查询" class="headerlink" title="bool 查询"></a>bool 查询</h2><p>Bool 查询结构如下:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"bool"</span>: &#123;</span><br><span class="line">            <span class="attr">"must"</span>: [],</span><br><span class="line">            <span class="attr">"should"</span>: []</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中 must 对应 <code>AND</code> 操作， should 对应 <code>should</code>操作。需要注意的是，在有 <code>filter</code> 和 <code>must</code>时，<code>should</code>的值不会影响的搜索结构。如果需要 <code>must</code> 和 <code>should</code> 同时满足，可以使用 <code>minimum_should_match</code>字段:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"bool"</span>: &#123;</span><br><span class="line">        <span class="attr">"minimum_should_match"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">"must"</span>: [],</span><br><span class="line">            <span class="attr">"should"</span>: []</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="查询聚合"><a href="#查询聚合" class="headerlink" title="查询聚合"></a>查询聚合</h2><p><code>text</code> 类型的字段默认不支持聚合，可以使用如下方式(在 field 名字后面加上 <code>.keyword</code>):</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"size"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"aggs"</span> : &#123;</span><br><span class="line">        <span class="attr">"patterns"</span> : &#123;</span><br><span class="line">            <span class="attr">"terms"</span> : &#123; <span class="attr">"field"</span> : <span class="string">"pattern.keyword"</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="聚合排序"><a href="#聚合排序" class="headerlink" title="聚合排序"></a>聚合排序</h3><p>使用自己的 key 排序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="string">"aggregations"</span>: &#123;</span><br><span class="line">      <span class="string">"startcount"</span>: &#123;</span><br><span class="line">         <span class="string">"terms"</span>: &#123;</span><br><span class="line">            <span class="string">"field"</span>: <span class="string">"startat"</span>,</span><br><span class="line">            <span class="string">"script"</span>: <span class="string">"round(_value/1000)"</span>,</span><br><span class="line">            <span class="string">"size"</span>: 1000,</span><br><span class="line">            <span class="string">"order"</span>: &#123;</span><br><span class="line">               <span class="string">"_term"</span>: <span class="string">"asc"</span></span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="常用统计"><a href="#常用统计" class="headerlink" title="常用统计"></a>常用统计</h2><ul><li><p>去重统计</p><p><code>cardinality</code> 是基于<a href="https://link.jianshu.com/?t=http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/40671.pdf" target="_blank" rel="noopener">HyperLogLog++</a>（HLL）一个近似算法，可以通过 <code>precision_threshold</code>来控制精度，<code>precision_threshold</code>接受 0–40,000 之间的数字。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">        <span class="attr">"attacker_sum"</span>: &#123;</span><br><span class="line">            <span class="attr">"cardinality"</span>: &#123;</span><br><span class="line">                <span class="attr">"field"</span>: <span class="string">"attacker_id"</span>,</span><br><span class="line">                <span class="attr">"precision_threshold"</span>: <span class="number">1000000</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录下ES的常用操作，方便查看。&lt;/p&gt;
    
    </summary>
    
    
      <category term="elasticsearch" scheme="http://yoursite.com/tags/elasticsearch/"/>
    
  </entry>
  
</feed>
